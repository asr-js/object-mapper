{"version":3,"sources":["webpack://object-mapper/webpack/universalModuleDefinition","webpack://object-mapper/webpack/bootstrap","webpack://object-mapper/./node_modules/json2typescript/index.js","webpack://object-mapper/./node_modules/json2typescript/src/json2typescript/any.js","webpack://object-mapper/./node_modules/json2typescript/src/json2typescript/json-convert-enums.js","webpack://object-mapper/./node_modules/json2typescript/src/json2typescript/json-convert-options.js","webpack://object-mapper/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://object-mapper/./node_modules/@babel/runtime/helpers/createClass.js","webpack://object-mapper/./node_modules/json2typescript/src/json2typescript/json-convert.js","webpack://object-mapper/./node_modules/json2typescript/src/json2typescript/json-convert-decorators.js","webpack://object-mapper/./src/json-convert.ts","webpack://object-mapper/./src/writer.ts","webpack://object-mapper/./src/writer-array.ts","webpack://object-mapper/./src/read.ts","webpack://object-mapper/./src/read-array.ts","webpack://object-mapper/./src/read-map.ts","webpack://object-mapper/./src/read-set.ts","webpack://object-mapper/./src/copy.ts","webpack://object-mapper/./src/copy-array.ts","webpack://object-mapper/./src/copy-map.ts","webpack://object-mapper/./src/copy-set.ts","webpack://object-mapper/./node_modules/date-utils/lib/parse-date.js","webpack://object-mapper/./src/converter/date.ts","webpack://object-mapper/./node_modules/tslib/tslib.es6.js","webpack://object-mapper/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","json_convert_1","JsonConvert","json_convert_enums_1","ValueCheckingMode","OperationMode","json_convert_decorators_1","JsonObject","JsonProperty","JsonConverter","any_1","Any","PropertyMatchingRule","Settings","MAPPING_PROPERTY","MAPPER_PROPERTY","CLASS_IDENTIFIER","MappingOptions","this","classPropertyName","jsonPropertyName","expectedJsonType","undefined","isOptional","customConverter","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","json_convert_options_1","operationMode","valueCheckingMode","ignorePrimitiveChecks","propertyMatchingRule","_operationMode","ENABLE","_valueCheckingMode","ALLOW_OBJECT_NULL","_ignorePrimitiveChecks","_propertyMatchingRule","CASE_STRICT","set","serialize","data","DISABLE","Array","serializeArray","serializeObject","Error","DISALLOW_NULL","LOGGING","console","log","jsonObject","_i","_a","keys","propertyKey","serializeObject_loopProperty","instanceArray","jsonArray","classInstance","push","deserialize","json","classReference","deserializeArray","deserializeObject","deserializeObject_loopProperty","array","jsonArray_1","mappingOptions","getClassPropertyMappingOptions","classInstancePropertyValue","verifyProperty","e","getExpectedType","getTrueType","message","jsonValue","getObjectValue","getJsonType","JSON","stringify","propertyName","mappings","directMappingName","indirectMappingNames","filter","match","String","Number","Boolean","ALLOW_NULL","autofillType","CASE_INSENSITIVE","keyMapping","reduce","toLowerCase","type","constructor","trueValue","classIdentifier","decorator","mapping","unmappedKeys_1","val","indexOf","replace","params","arguments","conversionOption","jsonPropertyMappingOptions","jsonConvert","writer","serializationFeature","writerArray","serializationFeatures","map","item","read","readArray","readMap","jsonMap","result","Map","forEach","readSet","jsonSet","Set","add","copy","copyArray","copyMap","copySet","parseDate","time","toString","Date","getTime","err","error","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate"],"mappings":"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","file":"object-mapper.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"object-mapper\"] = factory();\n\telse\n\t\troot[\"object-mapper\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_convert_1 = require(\"./src/json2typescript/json-convert\");\nexports.JsonConvert = json_convert_1.JsonConvert;\nvar json_convert_enums_1 = require(\"./src/json2typescript/json-convert-enums\");\nexports.ValueCheckingMode = json_convert_enums_1.ValueCheckingMode;\nexports.OperationMode = json_convert_enums_1.OperationMode;\nvar json_convert_decorators_1 = require(\"./src/json2typescript/json-convert-decorators\");\nexports.JsonObject = json_convert_decorators_1.JsonObject;\nexports.JsonProperty = json_convert_decorators_1.JsonProperty;\nexports.JsonConverter = json_convert_decorators_1.JsonConverter;\nvar any_1 = require(\"./src/json2typescript/any\");\nexports.Any = any_1.Any;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Virtual any type for the property decorator.\n */\nvar Any = /** @class */ (function () {\n    function Any() {\n    }\n    return Any;\n}());\nexports.Any = Any;\n//# sourceMappingURL=any.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for the operation mode of a JsonConvert instance.\n *\n * The values should be used as follows:\n * - DISABLE: json2typescript will be disabled, no type checking or mapping is done\n * - ENABLE: json2typescript is enabled, but only errors are logged\n * - LOGGING: json2typescript is enabled and detailed information is logged\n *\n * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n * @see https://www.npmjs.com/package/json2typescript full documentation\n */\nvar OperationMode;\n(function (OperationMode) {\n    OperationMode[OperationMode[\"DISABLE\"] = 0] = \"DISABLE\";\n    OperationMode[OperationMode[\"ENABLE\"] = 1] = \"ENABLE\";\n    OperationMode[OperationMode[\"LOGGING\"] = 2] = \"LOGGING\";\n})(OperationMode = exports.OperationMode || (exports.OperationMode = {}));\n;\n/**\n * Enum for the property matching mode of a JsonConvert instance.\n *\n * The values should be used as follows:\n * - CASE_STRICT: JSON properties need to match exactly the names in the decorators\n * - CASE_INSENSITIVE: JSON properties need to match names in the decorators, but names they are not case sensitive\n *\n * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n * @see https://www.npmjs.com/package/json2typescript full documentation\n */\nvar PropertyMatchingRule;\n(function (PropertyMatchingRule) {\n    PropertyMatchingRule[PropertyMatchingRule[\"CASE_STRICT\"] = 1] = \"CASE_STRICT\";\n    PropertyMatchingRule[PropertyMatchingRule[\"CASE_INSENSITIVE\"] = 2] = \"CASE_INSENSITIVE\";\n})(PropertyMatchingRule = exports.PropertyMatchingRule || (exports.PropertyMatchingRule = {}));\n;\n/**\n * Enum for the value checking mode of a JsonConvert instance.\n *\n * The values should be used as follows:\n * - ALLOW_NULL: all given values in the JSON are allowed to be null\n * - ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n * - DISALLOW_NULL: no null values are tolerated in the JSON\n *\n * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n * @see https://www.npmjs.com/package/json2typescript full documentation\n */\nvar ValueCheckingMode;\n(function (ValueCheckingMode) {\n    ValueCheckingMode[ValueCheckingMode[\"ALLOW_NULL\"] = 1] = \"ALLOW_NULL\";\n    ValueCheckingMode[ValueCheckingMode[\"ALLOW_OBJECT_NULL\"] = 2] = \"ALLOW_OBJECT_NULL\";\n    ValueCheckingMode[ValueCheckingMode[\"DISALLOW_NULL\"] = 3] = \"DISALLOW_NULL\";\n})(ValueCheckingMode = exports.ValueCheckingMode || (exports.ValueCheckingMode = {}));\n;\n//# sourceMappingURL=json-convert-enums.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Internal constants.\n */\nvar Settings = /** @class */ (function () {\n    function Settings() {\n    }\n    Settings.MAPPING_PROPERTY = \"__jsonconvert__mapping__\";\n    Settings.MAPPER_PROPERTY = \"__jsonconvert__mapper__\";\n    Settings.CLASS_IDENTIFIER = \"__jsonconvert__class_identifier__\";\n    return Settings;\n}());\nexports.Settings = Settings;\n;\n/**\n * Internal mapping options for a property.\n */\nvar MappingOptions = /** @class */ (function () {\n    function MappingOptions() {\n        this.classPropertyName = \"\";\n        this.jsonPropertyName = \"\";\n        this.expectedJsonType = undefined;\n        this.isOptional = false;\n        this.customConverter = null;\n    }\n    return MappingOptions;\n}());\nexports.MappingOptions = MappingOptions;\n//# sourceMappingURL=json-convert-options.js.map","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_convert_enums_1 = require(\"./json-convert-enums\");\nvar json_convert_options_1 = require(\"./json-convert-options\");\nvar any_1 = require(\"./any\");\n/**\n * Offers a simple API for mapping JSON objects to TypeScript/JavaScript classes and vice versa.\n *\n * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n * @see https://www.npmjs.com/package/json2typescript full documentation on NPM\n */\nvar JsonConvert = /** @class */ (function () {\n    /////////////////\n    // CONSTRUCTOR //\n    /////////////////\n    /**\n     * Constructor.\n     *\n     * To learn more about the params, check the documentation of the equally named class properties.\n     *\n     * @param operationMode optional param (default: OperationMode.ENABLE)\n     * @param valueCheckingMode optional param (default: ValueCheckingMode.ALLOW_OBJECT_NULL)\n     * @param ignorePrimitiveChecks optional param (default: false)\n     * @param propertyMatchingRule optional param (default: PropertyMatchingRule.CASE_STRICT)\n     */\n    function JsonConvert(operationMode, valueCheckingMode, ignorePrimitiveChecks, propertyMatchingRule) {\n        ////////////////\n        // PROPERTIES //\n        ////////////////\n        /**\n         * Determines how the JsonConvert class instance should operate.\n         *\n         * You may assign three different values:\n         * - OperationMode.DISABLE: json2typescript will be disabled, no type checking or mapping is done\n         * - OperationMode.ENABLE: json2typescript is enabled, but only errors are logged\n         * - OperationMode.LOGGING: json2typescript is enabled and detailed information is logged\n         */\n        this._operationMode = json_convert_enums_1.OperationMode.ENABLE;\n        /**\n         * Determines which types are allowed to be null.\n         *\n         * You may assign three different values:\n         * - ValueCheckingMode.ALLOW_NULL: all given values in the JSON are allowed to be null\n         * - ValueCheckingMode.ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n         * - ValueCheckingMode.DISALLOW_NULL: no null values are tolerated in the JSON\n         */\n        this._valueCheckingMode = json_convert_enums_1.ValueCheckingMode.ALLOW_OBJECT_NULL;\n        /**\n         * Determines whether primitive types should be checked.\n         * If true, it will be allowed to assign primitive to other primitive types.\n         */\n        this._ignorePrimitiveChecks = false;\n        /**\n         * Determines the rule of how JSON properties shall be matched with class properties during deserialization.\n         *\n         * You may assign the following values:\n         * - PropertyMatchingRule.CASE_STRICT: JSON properties need to match exactly the names in the decorators\n         * - PropertyMatchingRule.CASE_INSENSITIVE: JSON properties need to match names in the decorators, but names they are not case sensitive\n         */\n        this._propertyMatchingRule = json_convert_enums_1.PropertyMatchingRule.CASE_STRICT;\n        if (operationMode !== undefined && operationMode in json_convert_enums_1.OperationMode)\n            this.operationMode = operationMode;\n        if (valueCheckingMode !== undefined && valueCheckingMode in json_convert_enums_1.ValueCheckingMode)\n            this.valueCheckingMode = valueCheckingMode;\n        if (ignorePrimitiveChecks !== undefined)\n            this.ignorePrimitiveChecks = ignorePrimitiveChecks;\n        if (propertyMatchingRule !== undefined)\n            this.propertyMatchingRule = propertyMatchingRule;\n    }\n    Object.defineProperty(JsonConvert.prototype, \"operationMode\", {\n        /**\n         * Determines how the JsonConvert class instance should operate.\n         *\n         * You may assign three different values:\n         * - OperationMode.DISABLE: json2typescript will be disabled, no type checking or mapping is done\n         * - OperationMode.ENABLE: json2typescript is enabled, but only errors are logged\n         * - OperationMode.LOGGING: json2typescript is enabled and detailed information is logged\n         * @returns {number}\n         */\n        get: function () {\n            return this._operationMode;\n        },\n        /**\n         * Determines how the JsonConvert class instance should operate.\n         *\n         * You may assign three different values:\n         * - OperationMode.DISABLE: json2typescript will be disabled, no type checking or mapping is done\n         * - OperationMode.ENABLE: json2typescript is enabled, but only errors are logged\n         * - OperationMode.LOGGING: json2typescript is enabled and detailed information is logged\n         * @param value\n         */\n        set: function (value) {\n            if (value in json_convert_enums_1.OperationMode)\n                this._operationMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsonConvert.prototype, \"valueCheckingMode\", {\n        /**\n         * Determines which types are allowed to be null.\n         *\n         * You may assign three different values:\n         * - ValueCheckingMode.ALLOW_NULL: all given values in the JSON are allowed to be null\n         * - ValueCheckingMode.ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n         * - ValueCheckingMode.DISALLOW_NULL: no null values are tolerated in the JSON\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._valueCheckingMode;\n        },\n        /**\n         * Determines which types are allowed to be null.\n         *\n         * You may assign three different values:\n         * - ValueCheckingMode.ALLOW_NULL: all given values in the JSON are allowed to be null\n         * - ValueCheckingMode.ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n         * - ValueCheckingMode.DISALLOW_NULL: no null values are tolerated in the JSON\n         *\n         * @param value\n         */\n        set: function (value) {\n            if (value in json_convert_enums_1.ValueCheckingMode)\n                this._valueCheckingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsonConvert.prototype, \"ignorePrimitiveChecks\", {\n        /**\n         * Determines whether primitive types should be checked.\n         * If true, it will be allowed to assign primitive to other primitive types.\n         *\n         * @returns {boolean}\n         */\n        get: function () {\n            return this._ignorePrimitiveChecks;\n        },\n        /**\n         * Determines whether primitive types should be checked.\n         * If true, it will be allowed to assign primitive to other primitive types.\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._ignorePrimitiveChecks = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsonConvert.prototype, \"propertyMatchingRule\", {\n        /**\n         * Determines the rule of how JSON properties shall be matched with class properties during deserialization.\n         *\n         * You may assign the following values:\n         * - PropertyMatchingRule.CASE_STRICT: JSON properties need to match exactly the names in the decorators\n         * - PropertyMatchingRule.CASE_INSENSITIVE: JSON properties need to match names in the decorators, but names they are not case sensitive\n         * @returns {number}\n         */\n        get: function () {\n            return this._propertyMatchingRule;\n        },\n        /**\n         * Determines the rule of how JSON properties shall be matched with class properties during deserialization.\n         *\n         * You may assign the following values:\n         * - PropertyMatchingRule.CASE_STRICT: JSON properties need to match exactly the names in the decorators\n         * - PropertyMatchingRule.CASE_INSENSITIVE: JSON properties need to match names in the decorators, but names they are not case sensitive\n         * @param value\n         */\n        set: function (value) {\n            if (value in json_convert_enums_1.PropertyMatchingRule)\n                this._propertyMatchingRule = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ////////////////////\n    // PUBLIC METHODS //\n    ////////////////////\n    /**\n     * Tries to serialize a TypeScript object or array of objects to JSON.\n     *\n     * @param data object or array of objects\n     *\n     * @returns the JSON object\n     *\n     * @throws an Error in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.serialize = function (data) {\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return data;\n        }\n        // Call the appropriate method depending on the type\n        if (data instanceof Array) {\n            return this.serializeArray(data);\n        }\n        else if (typeof data === \"object\") { // careful: an array is an object in TypeScript!\n            return this.serializeObject(data);\n        }\n        else {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter data in JsonConvert.serialize() is not in valid format (object or array).\" +\n                \"\\n\");\n        }\n    };\n    /**\n     * Tries to serialize a TypeScript object to a JSON object.\n     *\n     * @param instance TypeScript instance\n     *\n     * @returns the JSON object\n     *\n     * @throws an Error in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.serializeObject = function (instance) {\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return instance;\n        }\n        // Check if the passed type is allowed\n        if (instance === undefined) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter instance in JsonConvert.serializeObject() is undefined. This is not a valid JSON format.\" +\n                \"\\n\");\n        }\n        else if (instance === null) {\n            if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL) {\n                throw new Error(\"Fatal error in JsonConvert. \" +\n                    \"Passed parameter instance in JsonConvert.serializeObject() is undefined. You have specified to disallow null values.\" +\n                    \"\\n\");\n            }\n            else {\n                return instance;\n            }\n        }\n        else if (typeof (instance) !== \"object\" || instance instanceof Array) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter instance in JsonConvert.serializeObject() is not of type object.\" +\n                \"\\n\");\n        }\n        // Now serialize and return the plain object\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JavaScript instance:\");\n            console.log(instance);\n        }\n        var jsonObject = {};\n        // Loop through all initialized class properties\n        for (var _i = 0, _a = Object.keys(instance); _i < _a.length; _i++) {\n            var propertyKey = _a[_i];\n            this.serializeObject_loopProperty(instance, propertyKey, jsonObject);\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning JSON object:\");\n            console.log(jsonObject);\n            console.log(\"----------\");\n        }\n        return jsonObject;\n    };\n    /**\n     * Tries to serialize a TypeScript array to a JSON array.\n     *\n     * @param instanceArray array of TypeScript instances\n     *\n     * @returns the JSON array\n     *\n     * @throws an Error in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.serializeArray = function (instanceArray) {\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return instanceArray;\n        }\n        // Check if the passed type is allowed\n        if (instanceArray === undefined) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter instanceArray in JsonConvert.serializeArray() is undefined. This is not a valid JSON format.\" +\n                \"\\n\");\n        }\n        else if (instanceArray === null) {\n            if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL) {\n                throw new Error(\"Fatal error in JsonConvert. \" +\n                    \"Passed parameter instanceArray in JsonConvert.serializeArray() is undefined. You have specified to disallow null values.\" +\n                    \"\\n\");\n            }\n            else {\n                return instanceArray;\n            }\n        }\n        else if (typeof (instanceArray) !== \"object\" || instanceArray instanceof Array === false) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter instanceArray in JsonConvert.serializeArray() is not of type array.\" +\n                \"\\n\");\n        }\n        // Now serialize and return the plain object\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JavaScript array:\");\n            console.log(instanceArray);\n        }\n        var jsonArray = [];\n        // Loop through all array elements\n        for (var _i = 0, _a = instanceArray; _i < _a.length; _i++) {\n            var classInstance = _a[_i];\n            jsonArray.push(this.serializeObject(classInstance));\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning JSON array:\");\n            console.log(jsonArray);\n            console.log(\"----------\");\n        }\n        return jsonArray;\n    };\n    /**\n     * Tries to deserialize given JSON to a TypeScript object or array of objects.\n     *\n     * @param json the JSON as object or array\n     * @param classReference the class reference\n     *\n     * @returns the deserialized data (TypeScript instance or array of TypeScript instances)\n     *\n     * @throws an Error in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.deserialize = function (json, classReference) {\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return json;\n        }\n        // Call the appropriate method depending on the type\n        if (json instanceof Array) {\n            return this.deserializeArray(json, classReference);\n        }\n        else if (typeof json === \"object\") { // careful: an array is an object in TypeScript!\n            return this.deserializeObject(json, classReference);\n        }\n        else {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter json in JsonConvert.deserialize() is not in valid JSON format (object or array).\" +\n                \"\\n\");\n        }\n    };\n    /**\n     * Tries to deserialize a JSON object to a TypeScript object.\n     *\n     * @param jsonObject the JSON object\n     * @param classReference the class reference\n     *\n     * @returns the deserialized TypeScript instance\n     *\n     * @throws an Error in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.deserializeObject = function (jsonObject, classReference) {\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return jsonObject;\n        }\n        // Check if the passed type is allowed\n        if (jsonObject === undefined) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonObject in JsonConvert.deserializeObject() is undefined. This is not a valid JSON format.\" +\n                \"\\n\");\n        }\n        else if (jsonObject === null) {\n            if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL) {\n                throw new Error(\"Fatal error in JsonConvert. \" +\n                    \"Passed parameter jsonObject in JsonConvert.deserializeObject() is undefined. You have specified to disallow null values.\" +\n                    \"\\n\");\n            }\n            else {\n                return jsonObject;\n            }\n        }\n        else if (typeof (jsonObject) !== \"object\" || jsonObject instanceof Array) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonObject in JsonConvert.deserializeObject() is not of type object.\" +\n                \"\\n\");\n        }\n        // Now deserialize and return the instance\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JSON object:\");\n            console.log(jsonObject);\n        }\n        var instance = new classReference();\n        // Loop through all initialized class properties\n        for (var _i = 0, _a = Object.keys(instance); _i < _a.length; _i++) {\n            var propertyKey = _a[_i];\n            this.deserializeObject_loopProperty(instance, propertyKey, jsonObject);\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning CLASS instance:\");\n            console.log(instance);\n            console.log(\"----------\");\n        }\n        return instance;\n    };\n    /**\n     * Tries to deserialize a JSON array to a TypeScript array.\n     *\n     * @param jsonArray the JSON array\n     * @param classReference the object class\n     *\n     * @returns the deserialized array of TypeScript instances\n     *\n     * @throws an Error in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.deserializeArray = function (jsonArray, classReference) {\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return jsonArray;\n        }\n        // Check if the passed type is allowed\n        if (jsonArray === undefined) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonArray in JsonConvert.deserializeObject() is undefined. This is not a valid JSON format.\" +\n                \"\\n\");\n        }\n        else if (jsonArray === null) {\n            if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL) {\n                throw new Error(\"Fatal error in JsonConvert. \" +\n                    \"Passed parameter jsonArray in JsonConvert.deserializeObject() is undefined. You have specified to disallow null values.\" +\n                    \"\\n\");\n            }\n            else {\n                return jsonArray;\n            }\n        }\n        else if (typeof (jsonArray) !== \"object\" || jsonArray instanceof Array === false) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonArray in JsonConvert.deserializeArray() is not of type array.\" +\n                \"\\n\");\n        }\n        // Now deserialize and return the array\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return jsonArray;\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JSON array:\");\n            console.log(jsonArray);\n        }\n        var array = [];\n        // Loop through all array elements\n        for (var _i = 0, jsonArray_1 = jsonArray; _i < jsonArray_1.length; _i++) {\n            var jsonObject = jsonArray_1[_i];\n            array.push(this.deserializeObject(jsonObject, classReference));\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning array of CLASS instances:\");\n            console.log(array);\n            console.log(\"----------\");\n        }\n        return array;\n    };\n    /////////////////////\n    // PRIVATE METHODS //\n    /////////////////////\n    /**\n     * Tries to find the JSON mapping for a given class property and finally assign the value.\n     *\n     * @param instance the instance of the class\n     * @param classPropertyName the property name\n     * @param json the JSON object\n     *\n     * @throws throws an Error in case of failure\n     */\n    JsonConvert.prototype.serializeObject_loopProperty = function (instance, classPropertyName, json) {\n        // Check if a JSON-object mapping is possible for a property\n        var mappingOptions = this.getClassPropertyMappingOptions(instance, classPropertyName);\n        if (mappingOptions === null) {\n            return;\n        }\n        // Get expected and real values\n        var jsonPropertyName = mappingOptions.jsonPropertyName;\n        var expectedJsonType = mappingOptions.expectedJsonType;\n        var isOptional = mappingOptions.isOptional;\n        var customConverter = mappingOptions.customConverter;\n        var classInstancePropertyValue = instance[classPropertyName];\n        // Check if the class property value exists\n        if (typeof (classInstancePropertyValue) === \"undefined\") {\n            if (isOptional)\n                return;\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JavaScript instance of class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" to JSON because the defined class property \\\"\" + classPropertyName + \"\\\" does not exist or is not defined:\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonPropertyName + \"\\n\\n\");\n        }\n        // Check if the property is optional\n        // If the json value is null, we don't assign it in that case\n        if (isOptional && classInstancePropertyValue === null)\n            return;\n        // Map the property\n        try {\n            json[jsonPropertyName] = customConverter !== null ? customConverter.serialize(classInstancePropertyValue) : this.verifyProperty(expectedJsonType, classInstancePropertyValue, true);\n        }\n        catch (e) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JavaScript instance of class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" to JSON because of a type error.\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tClass property value: \\n\\t\\t\" + classInstancePropertyValue + \"\\n\\n\" +\n                \"\\tExpected type: \\n\\t\\t\" + this.getExpectedType(expectedJsonType) + \"\\n\\n\" +\n                \"\\tRuntime type: \\n\\t\\t\" + this.getTrueType(classInstancePropertyValue) + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonPropertyName + \"\\n\\n\" +\n                e.message + \"\\n\");\n        }\n    };\n    /**\n     * Tries to find the JSON mapping for a given class property and finally assign the value.\n     *\n     * @param instance the instance of the class\n     * @param classPropertyName the property name\n     * @param json the JSON object\n     *\n     * @throws throws an Error in case of failure\n     */\n    JsonConvert.prototype.deserializeObject_loopProperty = function (instance, classPropertyName, json) {\n        var mappingOptions = this.getClassPropertyMappingOptions(instance, classPropertyName);\n        if (mappingOptions === null) {\n            return;\n        }\n        // Get expected and real values\n        var jsonPropertyName = mappingOptions.jsonPropertyName;\n        var expectedJsonType = mappingOptions.expectedJsonType;\n        var isOptional = mappingOptions.isOptional;\n        var customConverter = mappingOptions.customConverter;\n        var jsonValue = undefined;\n        try {\n            jsonValue = this.getObjectValue(json, jsonPropertyName);\n        }\n        catch (_a) { }\n        // Check if the json value exists\n        if (typeof (jsonValue) === \"undefined\") {\n            if (isOptional)\n                return;\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JSON object to the class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" because the defined JSON property \\\"\" + jsonPropertyName + \"\\\" does not exist:\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonPropertyName + \"\\n\\n\");\n        }\n        // Check if the property is optional\n        // If the json value is null, we don't assign it in that case\n        if (isOptional && jsonValue === null)\n            return;\n        // Map the property\n        try {\n            instance[classPropertyName] = customConverter !== null ? customConverter.deserialize(jsonValue) : this.verifyProperty(expectedJsonType, jsonValue);\n        }\n        catch (e) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JSON object to the class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" because of a type error.\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tExpected type: \\n\\t\\t\" + this.getExpectedType(expectedJsonType) + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonPropertyName + \"\\n\\n\" +\n                \"\\tJSON type: \\n\\t\\t\" + this.getJsonType(jsonValue) + \"\\n\\n\" +\n                \"\\tJSON value: \\n\\t\\t\" + JSON.stringify(jsonValue) + \"\\n\\n\" +\n                e.message + \"\\n\");\n        }\n    };\n    ////////////////////\n    // HELPER METHODS //\n    ////////////////////\n    /**\n     * Gets the mapping options of a given class property.\n     *\n     * @param instance any class instance\n     * @param {string} propertyName any property name\n     *\n     * @returns {MappingOptions|null}\n     */\n    JsonConvert.prototype.getClassPropertyMappingOptions = function (instance, propertyName) {\n        var mappings = instance[json_convert_options_1.Settings.MAPPING_PROPERTY];\n        // Check if mapping is defined\n        if (typeof (mappings) === \"undefined\")\n            return null;\n        // Get direct mapping if possible\n        var directMappingName = instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \".\" + propertyName;\n        if (typeof (mappings[directMappingName]) !== \"undefined\") {\n            return mappings[directMappingName];\n        }\n        // No mapping was found, try to find some\n        var indirectMappingNames = Object.keys(mappings).filter(function (key) { return key.match(\"\\\\.\" + propertyName + \"$\"); }); // use endsWidth in later versions\n        if (indirectMappingNames.length > 0) {\n            return mappings[indirectMappingNames[0]];\n        }\n        return null;\n    };\n    /**\n     * Compares the type of a given value with an internal expected json type.\n     * Either returns the resulting value or throws an exception.\n     *\n     * @param expectedJsonType the expected json type for the property\n     * @param value the property value to verify\n     * @param serialize optional param (default: false), if given, we are in serialization mode\n     *\n     * @returns returns the resulted mapped property\n     *\n     * @throws an error in case of failure\n     */\n    JsonConvert.prototype.verifyProperty = function (expectedJsonType, value, serialize) {\n        // Map immediately if we don't care about the type\n        if (expectedJsonType === any_1.Any || expectedJsonType === null || expectedJsonType === Object) {\n            return value;\n        }\n        // Check if attempt and expected was 1-d\n        if (expectedJsonType instanceof Array === false && value instanceof Array === false) {\n            // Check the type\n            if (typeof (expectedJsonType) !== \"undefined\" && expectedJsonType.prototype.hasOwnProperty(json_convert_options_1.Settings.CLASS_IDENTIFIER)) { // only decorated custom objects have this injected property\n                // Check if we have null value\n                if (value === null) {\n                    if (this.valueCheckingMode !== json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL)\n                        return null;\n                    else\n                        throw new Error(\"\\tReason: Given value is null.\");\n                }\n                if (serialize)\n                    return this.serializeObject(value);\n                else\n                    return this.deserializeObject(value, expectedJsonType);\n            }\n            else if (expectedJsonType === any_1.Any || expectedJsonType === null || expectedJsonType === Object) { // general object\n                // Check if we have null value\n                if (value === null) {\n                    if (this.valueCheckingMode !== json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL)\n                        return null;\n                    else\n                        throw new Error(\"\\tReason: Given value is null.\");\n                }\n                return value;\n            }\n            else if (expectedJsonType === String || expectedJsonType === Number || expectedJsonType === Boolean) { // otherwise check for a primitive type\n                // Check if we have null value\n                if (value === null) {\n                    if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.ALLOW_NULL)\n                        return null;\n                    else\n                        throw new Error(\"\\tReason: Given value is null.\");\n                }\n                // Check if the types match\n                if ( // primitive types match\n                (expectedJsonType === String && typeof (value) === \"string\") ||\n                    (expectedJsonType === Number && typeof (value) === \"number\") ||\n                    (expectedJsonType === Boolean && typeof (value) === \"boolean\")) {\n                    return value;\n                }\n                else { // primitive types mismatch\n                    if (this.ignorePrimitiveChecks)\n                        return value;\n                    throw new Error(\"\\tReason: Given object does not match the expected primitive type.\");\n                }\n            }\n            else { // other weird types\n                throw new Error(\"\\tReason: Expected type is unknown. There might be multiple reasons for this:\\n\" +\n                    \"\\t- You are missing the decorator @JsonObject (for object mapping)\\n\" +\n                    \"\\t- You are missing the decorator @JsonConverter (for custom mapping) before your class definition\\n\" +\n                    \"\\t- Your given class is undefined in the decorator because of circular dependencies\");\n            }\n        }\n        // Check if attempt and expected was n-d\n        if (expectedJsonType instanceof Array && value instanceof Array) {\n            var array = [];\n            // No data given, so return empty value\n            if (value.length === 0) {\n                return array;\n            }\n            // We obviously don't care about the type, so return the value as is\n            if (expectedJsonType.length === 0) {\n                return value;\n            }\n            // Loop through the data. Both type and value are at least of length 1\n            var autofillType = expectedJsonType.length < value.length;\n            for (var i = 0; i < value.length; i++) {\n                if (autofillType && i >= expectedJsonType.length)\n                    expectedJsonType[i] = expectedJsonType[i - 1];\n                array[i] = this.verifyProperty(expectedJsonType[i], value[i], serialize);\n            }\n            return array;\n        }\n        // Check if attempt was 1-d and expected was n-d\n        if (expectedJsonType instanceof Array && value instanceof Object) {\n            var array = [];\n            // No data given, so return empty value\n            if (value.length === 0) {\n                return array;\n            }\n            // We obviously don't care about the type, so return the json value as is\n            if (expectedJsonType.length === 0) {\n                return value;\n            }\n            // Loop through the data. Both type and value are at least of length 1\n            var autofillType = expectedJsonType.length < Object.keys(value).length;\n            var i = 0;\n            for (var key in value) {\n                if (autofillType && i >= expectedJsonType.length)\n                    expectedJsonType[i] = expectedJsonType[i - 1];\n                array[key] = this.verifyProperty(expectedJsonType[i], value[key]);\n                i++;\n            }\n            return array;\n        }\n        // Check if attempt was 1-d and expected was n-d\n        if (expectedJsonType instanceof Array) {\n            if (value === null) {\n                if (this.valueCheckingMode !== json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL)\n                    return null;\n                else\n                    throw new Error(\"\\tReason: Given value is null.\");\n            }\n            throw new Error(\"\\tReason: Expected type is array, but given value is non-array.\");\n        }\n        // Check if attempt was n-d and expected as 1-d\n        if (value instanceof Array) {\n            throw new Error(\"\\tReason: Given value is array, but expected a non-array type.\");\n        }\n        // All other attempts are fatal\n        throw new Error(\"\\tReason: Mapping failed because of an unknown error.\");\n    };\n    /**\n     * Gets the value of an object for a given value.\n     * If the object does not have the specific key, an Error is thrown.\n     *\n     * @param data\n     * @param key\n     *\n     * @returns returns the value\n     *\n     * @throws an Error in case of the key was not found in the object\n     */\n    JsonConvert.prototype.getObjectValue = function (data, key) {\n        // If we do not care about the case of the key, ad\n        if (this.propertyMatchingRule === json_convert_enums_1.PropertyMatchingRule.CASE_INSENSITIVE) {\n            // Create a mapping of the keys: keys[lowercase]=normalcase\n            var keyMapping = Object.keys(data).reduce(function (keys, key) {\n                keys[key.toLowerCase()] = key;\n                return keys;\n            }, {});\n            // Define the new key\n            key = keyMapping[key.toLowerCase()];\n        }\n        // Throw an error if the key is not in the object\n        if (key in data === false) {\n            throw new Error();\n        }\n        return data[key];\n    };\n    ///////////////////////////\n    // JSON2TYPESCRIPT TYPES //\n    ///////////////////////////\n    /**\n     * Returns a string representation of the expected json type.\n     *\n     * @param expectedJsonType the expected type given from the decorator\n     *\n     * @returns {string} the string representation\n     */\n    JsonConvert.prototype.getExpectedType = function (expectedJsonType) {\n        var type = \"\";\n        if (expectedJsonType instanceof Array) {\n            type = \"[\";\n            for (var i = 0; i < expectedJsonType.length; i++) {\n                if (i > 0)\n                    type += \",\";\n                type += this.getExpectedType(expectedJsonType[i]);\n            }\n            type += \"]\";\n            return type;\n        }\n        else {\n            if (expectedJsonType === any_1.Any || expectedJsonType === null || expectedJsonType === Object) {\n                return \"any\";\n            }\n            else if (expectedJsonType === String || expectedJsonType === Boolean || expectedJsonType === Number) {\n                return (new expectedJsonType()).constructor.name.toLowerCase();\n            }\n            else if (typeof expectedJsonType === 'function') {\n                return (new expectedJsonType()).constructor.name;\n            }\n            else if (expectedJsonType === undefined) {\n                return \"undefined\";\n            }\n            else {\n                return \"?????\";\n            }\n        }\n    };\n    /**\n     * Returns a string representation of the JSON value type.\n     *\n     * @param jsonValue the JSON value\n     *\n     * @returns {string} the string representation\n     */\n    JsonConvert.prototype.getJsonType = function (jsonValue) {\n        if (jsonValue === null)\n            return \"null\";\n        var type = \"\";\n        if (jsonValue instanceof Array) {\n            type = \"[\";\n            for (var i = 0; i < jsonValue.length; i++) {\n                if (i > 0)\n                    type += \",\";\n                type += this.getJsonType(jsonValue[i]);\n            }\n            type += \"]\";\n            return type;\n        }\n        else {\n            return typeof (jsonValue);\n        }\n    };\n    /**\n     * Returns a string representation of the true TypeScript type.\n     *\n     * @param trueValue the true value\n     *\n     * @returns {string} the string representation\n     */\n    JsonConvert.prototype.getTrueType = function (trueValue) {\n        return typeof (trueValue);\n    };\n    return JsonConvert;\n}());\nexports.JsonConvert = JsonConvert;\n//# sourceMappingURL=json-convert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_convert_options_1 = require(\"./json-convert-options\");\nvar any_1 = require(\"./any\");\n/**\n * Decorator of a class that is a custom converter.\n *\n * @param target the class\n */\nfunction JsonConverter(target) {\n    target[json_convert_options_1.Settings.MAPPER_PROPERTY] = \"\";\n}\nexports.JsonConverter = JsonConverter;\n/**\n * Decorator of a class that comes from a JSON object.\n *\n * @param target the class identifier or the class\n *\n * @returns\n *\n * @throws Error\n */\nfunction JsonObject(target) {\n    // target is the constructor or the custom class name\n    var classIdentifier = \"\";\n    var decorator = function (target) {\n        target.prototype[json_convert_options_1.Settings.CLASS_IDENTIFIER] = classIdentifier.length > 0 ? classIdentifier : target.name;\n        var mapping = target.prototype[json_convert_options_1.Settings.MAPPING_PROPERTY];\n        // Make sure we replace the mapping names of all properties of this class\n        if (!mapping)\n            return;\n        var unmappedKeys = Object.keys(mapping)\n            .filter(function (val) { return val.indexOf(json_convert_options_1.Settings.CLASS_IDENTIFIER + \".\") === 0; });\n        for (var _i = 0, unmappedKeys_1 = unmappedKeys; _i < unmappedKeys_1.length; _i++) {\n            var key = unmappedKeys_1[_i];\n            mapping[key.replace(json_convert_options_1.Settings.CLASS_IDENTIFIER, target.prototype[json_convert_options_1.Settings.CLASS_IDENTIFIER])] =\n                mapping[key];\n            // We must delete the mapping without associated class since it will\n            // cause issues with inheritance of mappings and overrides.\n            delete mapping[key];\n        }\n    };\n    var type = typeof target;\n    switch (type) {\n        // Decorator was @JsonObject(classId)\n        case \"string\":\n            classIdentifier = target;\n            return decorator;\n        // Decorator was @JsonObject\n        case \"function\":\n            decorator(target);\n            return;\n        // Decorator was @JsonObject()\n        case \"undefined\":\n            return decorator;\n        // Decorator was @JsonObject(123)\n        default:\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"It is mandatory to pass a string as parameter in the @JsonObject decorator.\\n\\n\" +\n                \"Use either @JsonObject or @JsonObject(classId) where classId is a string.\\n\\n\");\n    }\n}\nexports.JsonObject = JsonObject;\n/**\n * Decorator of a class property that comes from a JSON object.\n *\n * The second param can be either a type or a class of a custom converter.\n *\n * Use the following notation for the type:\n * - Primitive type: String|Number|Boolean\n * - Custom type: YourClassName\n * - Array type: [String|Number|Boolean|YourClassName]\n *\n * If you decide to use a custom converter, make sure this class implements the interface JsonCustomConvert from this package.\n *\n * @param jsonPropertyName optional param (default: classPropertyName) the property name in the expected JSON object\n * @param conversionOption optional param (default: Any), should be either the expected type (String|Boolean|Number|etc) or a custom converter class implementing JsonCustomConvert\n * @param isOptional optional param (default: false), if true, the json property does not have to be present in the object\n *\n * @returns\n *\n * @throws Error\n */\nfunction JsonProperty() {\n    var params = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        params[_i] = arguments[_i];\n    }\n    return function (target, classPropertyName) {\n        // target is the class\n        var jsonPropertyName = classPropertyName;\n        var conversionOption = any_1.Any;\n        var isOptional = false;\n        switch (params.length) {\n            case 1:\n                if (params[0] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It is not allowed to explicitly pass \\\"undefined\\\" as first parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Leave the decorator parameters empty if you do not wish to pass the first parameter.\\n\\n\");\n                jsonPropertyName = params[0];\n                break;\n            case 2:\n                if (params[0] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It is not allowed to explicitly pass \\\"undefined\\\" as first parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Leave the decorator parameters empty if you do not wish to pass the first parameter.\\n\\n\");\n                if (params[1] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It is not allowed to explicitly pass \\\"undefined\\\" as second parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Use \\\"Any\\\" to allow any type. You can import this class from \\\"json2typescript\\\".\\n\\n\");\n                jsonPropertyName = params[0];\n                conversionOption = params[1];\n                break;\n            case 3:\n                if (params[0] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It is not allowed to explicitly pass \\\"undefined\\\" as first parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Leave the decorator parameters empty if you do not wish to pass the first parameter.\\n\\n\");\n                if (params[1] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It is not allowed to explicitly pass \\\"undefined\\\" as second parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Use \\\"Any\\\" to allow any type. You can import this class from \\\"json2typescript\\\".\\n\\n\");\n                jsonPropertyName = params[0];\n                conversionOption = params[1];\n                isOptional = params[2];\n                break;\n            default:\n                break;\n        }\n        if (typeof (target[json_convert_options_1.Settings.MAPPING_PROPERTY]) === \"undefined\") {\n            target[json_convert_options_1.Settings.MAPPING_PROPERTY] = [];\n        }\n        var jsonPropertyMappingOptions = new json_convert_options_1.MappingOptions();\n        jsonPropertyMappingOptions.classPropertyName = classPropertyName;\n        jsonPropertyMappingOptions.jsonPropertyName = jsonPropertyName;\n        jsonPropertyMappingOptions.isOptional = isOptional ? isOptional : false;\n        // Check if conversionOption is a type or a custom converter.\n        if (typeof (conversionOption) !== \"undefined\" && conversionOption !== null && typeof (conversionOption[json_convert_options_1.Settings.MAPPER_PROPERTY]) !== \"undefined\") {\n            jsonPropertyMappingOptions.customConverter = new conversionOption();\n        }\n        else {\n            jsonPropertyMappingOptions.expectedJsonType = conversionOption;\n        }\n        // Save the mapping info\n        if (typeof (target[json_convert_options_1.Settings.MAPPING_PROPERTY][json_convert_options_1.Settings.CLASS_IDENTIFIER + \".\" + classPropertyName]) === \"undefined\") {\n            target[json_convert_options_1.Settings.MAPPING_PROPERTY][json_convert_options_1.Settings.CLASS_IDENTIFIER + \".\" + classPropertyName] = jsonPropertyMappingOptions;\n        }\n        else {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"It is not allowed to add multiple decorators for the same property.\\n\\n\" +\n                \"\\tClass property: \\n\" +\n                \"\\t\\t\" + classPropertyName + \"\\n\\n\");\n        }\n    };\n}\nexports.JsonProperty = JsonProperty;\n//# sourceMappingURL=json-convert-decorators.js.map","import { JsonConvert, ValueCheckingMode } from 'json2typescript';\n\nconst jsonConvert: JsonConvert = new JsonConvert();\n\njsonConvert.ignorePrimitiveChecks = false;\njsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL;\n\nexport default jsonConvert;\n","import jsonConvert from './json-convert';\n\n/**\n * 将对象输出为JSON对象\n *\n * @param serializationFeature 具有序列化特性的对象\n */\nexport default function writer(serializationFeature: any): any {\n  return jsonConvert.serializeObject(serializationFeature);\n}\n","import writer from './writer';\n\n/**\n * 将对象数组输出为JSON对象数组\n *\n * @param serializationFeatures 具有序列化特性的对象\n */\nexport default function writerArray(serializationFeatures: any[]): any[] {\n  return serializationFeatures.map((item) => writer(item));\n}\n","import jsonConvert from './json-convert';\n\n/**\n * 将json读取为对象\n *\n * @param json json\n * @param classReference 类类型\n */\nexport default function read<T>(json: any, classReference: { new (): T }): T {\n  return jsonConvert.deserializeObject(json, classReference);\n}\n","import read from './read';\n\n/**\n * 将json数组读取为对象数组\n *\n * @param jsonArray json数组\n * @param classReference 类类型\n */\nexport default function readArray<T>(\n  jsonArray: any[],\n  classReference: { new (): T },\n): T[] {\n  return jsonArray.map((value) => read(value, classReference));\n}\n","import read from './read';\n\n/**\n * 将json映射读取为对象映射\n *\n * @param jsonMap json映射\n * @param classReference 类类型\n */\nexport default function readMap<K, V>(\n  jsonMap: Map<K, V>,\n  classReference: { new (): V },\n): Map<K, V> {\n  const result: Map<K, V> = new Map<K, V>();\n  jsonMap.forEach((value: V, key: K) => {\n    result.set(key, read(value, classReference));\n  });\n  return result;\n}\n","import read from './read';\n\n/**\n * 将json集合读取为对象集合\n *\n * @param jsonSet json集合\n * @param classReference 类类型\n */\nexport default function readSet<T>(\n  jsonSet: Set<any>,\n  classReference: { new (): T },\n): Set<T> {\n  const set: Set<T> = new Set<T>();\n  jsonSet.forEach((value) => set.add(read(value, classReference)));\n  return set;\n}\n","import read from './read';\nimport writer from './writer';\n\n/**\n * 拷贝对象\n *\n * @param serializationFeature 具有序列化特性的对象\n * @param classReference 类类型\n */\nexport default function copy<T>(\n  serializationFeature: any,\n  classReference: { new (): T },\n): T {\n  const serialization = writer(serializationFeature);\n  return read<T>(serialization, classReference);\n}\n","import writer from './writer';\nimport read from './read';\n\n/**\n * 拷贝对象数组\n *\n * @param serializationFeature 具有序列化特性的对象\n * @param classReference 类类型\n */\nexport default function copyArray<T>(\n  serializationFeature: any[],\n  classReference: { new (): T },\n): T[] {\n  return serializationFeature\n    .map((value) => writer(value))\n    .map((value) => read<T>(value, classReference));\n}\n","import copy from './copy';\n\n/**\n * 拷贝对象映射\n *\n * @param serializationFeature 具有序列化特性的对象\n * @param classReference 类类型\n */\nexport default function copyMap<K, V>(\n  serializationFeature: Map<K, V>,\n  classReference: { new (): V },\n): Map<K, V> {\n  const result: Map<K, V> = new Map<K, V>();\n  serializationFeature.forEach((value: V, key: K) => {\n    result.set(key, copy(value, classReference));\n  });\n  return result;\n}\n","import read from './read';\n\n/**\n * 拷贝对象集合\n *\n * @param serializationFeature 具有序列化特性的对象\n * @param classReference 类类型\n */\nexport default function copySet<T>(\n  serializationFeature: Set<any>,\n  classReference: { new (): T },\n): Set<T> {\n  const set: Set<T> = new Set<T>();\n  serializationFeature.forEach((value) => {\n    set.add(read<T>(value, classReference));\n  });\n  return set;\n}\n","/**\n * 解析为Date对象\n *\n * @param time 时间\n */\nexport default function parseDate(time) {\n    if (typeof time === 'number') {\n        if (time.toString().length === 10) {\n            time *= 1000;\n        }\n    }\n    else if (typeof time === 'string') {\n        time = time\n            .replace(/\\-/g, '/')\n            .replace('T', ' ')\n            .replace(/\\.[\\s\\S]*/g, '');\n    }\n    else if (time instanceof Date) {\n        time = time.getTime();\n    }\n    try {\n        return new Date(time);\n    }\n    catch (err) {\n        console.error('convert to date failed! source: ', time);\n        throw err;\n    }\n}\n//# sourceMappingURL=parse-date.js.map","import { JsonConverter, JsonCustomConvert } from 'json2typescript';\n\n// ---------------- Utils\nimport { parseDate } from 'date-utils';\n\n/**\n * Date Converter\n *\n * @author surh\n */\n@JsonConverter\nexport default class DateConverter implements JsonCustomConvert<Date | null> {\n  /**\n   * 序列化\n   *\n   * @param value Date\n   */\n  public serialize(value: null | Date): any {\n    return value ? value.getTime() : null;\n  }\n\n  /**\n   * 反序列化\n   *\n   * @param value 时间字符串\n   */\n  public deserialize(value: any): null | Date {\n    return value ? parseDate(value) : null;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export { default as jsonConvert } from './json-convert';\n\nexport { default as writer } from './writer';\nexport { default as writerArray } from './writer-array';\n\nexport { default as read } from './read';\nexport { default as readArray } from './read-array';\nexport { default as readMap } from './read-map';\nexport { default as readSet } from './read-set';\n\nexport { default as copy } from './copy';\nexport { default as copyArray } from './copy-array';\nexport { default as copyMap } from './copy-map';\nexport { default as copySet } from './copy-set';\n\nexport { default as DateConverter } from './converter/date';\n"],"sourceRoot":""}